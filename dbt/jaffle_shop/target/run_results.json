{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-04-17T10:26:40.030342Z", "invocation_id": "86ef4fb1-cc8b-4d98-afe1-6de845478e5e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-17T10:26:39.873979Z", "completed_at": "2025-04-17T10:26:39.885898Z"}, {"name": "execute", "started_at": "2025-04-17T10:26:39.895439Z", "completed_at": "2025-04-17T10:26:39.938748Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0658578872680664, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.jaffle_shop.stg_customers", "compiled": true, "compiled_code": "\n\nwith source as (\n    select * from \"cosmos\".\"dbt\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"cosmos\".\"dbt\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-17T10:26:39.876999Z", "completed_at": "2025-04-17T10:26:39.879466Z"}, {"name": "execute", "started_at": "2025-04-17T10:26:39.892136Z", "completed_at": "2025-04-17T10:26:39.939948Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06741476058959961, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.jaffle_shop.stg_orders", "compiled": true, "compiled_code": "\n\nwith source as (\n    select * from \"cosmos\".\"dbt\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"cosmos\".\"dbt\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-17T10:26:39.877956Z", "completed_at": "2025-04-17T10:26:39.879314Z"}, {"name": "execute", "started_at": "2025-04-17T10:26:39.879627Z", "completed_at": "2025-04-17T10:26:39.940470Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0673210620880127, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.jaffle_shop.stg_payments", "compiled": true, "compiled_code": "\n\nwith source as (\n    select * from \"cosmos\".\"dbt\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"cosmos\".\"dbt\".\"stg_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-17T10:26:39.944161Z", "completed_at": "2025-04-17T10:26:39.946987Z"}, {"name": "execute", "started_at": "2025-04-17T10:26:39.947126Z", "completed_at": "2025-04-17T10:26:40.022247Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07888412475585938, "adapter_response": {"_message": "SELECT 99", "code": "SELECT", "rows_affected": 99}, "message": "SELECT 99", "failures": null, "unique_id": "model.jaffle_shop.orders", "compiled": true, "compiled_code": "\n\nwith orders as (\n\n    select * from \"cosmos\".\"dbt\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select * from \"cosmos\".\"dbt\".\"stg_payments\"\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect * from final", "relation_name": "\"cosmos\".\"dbt\".\"orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-17T10:26:39.945518Z", "completed_at": "2025-04-17T10:26:39.953606Z"}, {"name": "execute", "started_at": "2025-04-17T10:26:39.953913Z", "completed_at": "2025-04-17T10:26:40.023566Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08000898361206055, "adapter_response": {"_message": "SELECT 100", "code": "SELECT", "rows_affected": 100}, "message": "SELECT 100", "failures": null, "unique_id": "model.jaffle_shop.customers", "compiled": true, "compiled_code": "\n\nwith customers as (\n\n    select * from \"cosmos\".\"dbt\".\"stg_customers\"\n\n),\n\norders as (\n\n    select * from \"cosmos\".\"dbt\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select * from \"cosmos\".\"dbt\".\"stg_payments\"\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final", "relation_name": "\"cosmos\".\"dbt\".\"customers\"", "batch_results": null}], "elapsed_time": 0.25542140007019043, "args": {"indirect_selection": "eager", "require_explicit_package_overrides_for_builtin_materializations": true, "partial_parse": true, "show_resource_report": false, "state_modified_compare_vars": false, "version_check": true, "cache_selected_only": false, "profiles_dir": "/Users/hemchheda/hem/airflow-dbt-cosmos/cosmos-demo/dbt/jaffle_shop", "require_batched_execution_for_custom_microbatch_strategy": false, "log_file_max_bytes": 10485760, "log_level": "info", "populate_cache": true, "send_anonymous_usage_stats": true, "exclude": [], "strict_mode": false, "vars": {}, "use_colors": true, "invocation_command": "dbt run", "static_parser": true, "printer_width": 80, "quiet": false, "log_format": "default", "use_colors_file": true, "source_freshness_run_project_hooks": false, "introspect": true, "require_yaml_configuration_for_mf_time_spines": false, "which": "run", "require_resource_names_without_spaces": false, "empty": false, "log_path": "/Users/hemchheda/hem/airflow-dbt-cosmos/cosmos-demo/dbt/jaffle_shop/logs", "require_nested_cumulative_type_params": false, "log_format_file": "debug", "skip_nodes_if_on_run_start_fails": false, "log_level_file": "debug", "project_dir": "/Users/hemchheda/hem/airflow-dbt-cosmos/cosmos-demo/dbt/jaffle_shop", "state_modified_compare_more_unrendered_values": false, "warn_error_options": {"include": [], "exclude": []}, "print": true, "macro_debugging": false, "favor_state": false, "defer": false, "select": [], "partial_parse_file_diff": true, "write_json": true}}